'use client'
import React from 'react';
import { X, Image as ImageIcon, Trash2, Edit2, Calendar, ChevronDown, Plus, Eye } from 'lucide-react';

// --- 1. Interface v√† Types ---
export type KnowledgeStatus = 'ƒê√£ xu·∫•t b·∫£n' | 'B·∫£n nh√°p' | 'ƒê√£ ·∫©n' | 'ƒê√£ l∆∞u tr·ªØ';
export type Category = 'Cung Ho√†ng ƒê·∫°o' | 'Ng≈© H√†nh' | 'Nh√¢n T∆∞·ªõng H·ªçc' | 'Tarot';

export interface Knowledge {
    id: number;
    title: string;
    excerpt: string;
    categories: Category[];
    status: KnowledgeStatus;
    views: number;
    publishedDate: string;
    updatedDate: string;
}

interface KnowledgeDetailModalProps {
    knowledge: Knowledge | null;
    onClose: () => void;
}

// --- 2. Helper Component: CategoryBadge ---
const CategoryBadge = ({ value }: { value: string }) => {
    let colorClass = 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300';
    if (value === 'Ng≈© H√†nh') colorClass = 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300';
    if (value === 'Nh√¢n T∆∞·ªõng H·ªçc') colorClass = 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300';
    if (value === 'Tarot') colorClass = 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300';
    
    // ƒê√£ x√≥a 'mr-2 mb-1' ƒë·ªÉ d√πng cho flex trong modal
    return (
        <span className={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${colorClass} mr-2 mb-1`}>
            {value}
        </span>
    );
}

// --- 3. Main Component: KnowledgeDetailModal ---

export const KnowledgeDetailModal: React.FC<KnowledgeDetailModalProps> = ({ knowledge, onClose }) => {
    if (!knowledge) return null;

    return (
        <div className="fixed inset-0 z-50 bg-black bg-opacity-50 flex justify-center items-center p-4" onClick={onClose}>
            <div
                className="w-full max-w-lg h-5/6 bg-white dark:bg-gray-800 shadow-2xl flex flex-col rounded-xl overflow-hidden"
                onClick={(e) => e.stopPropagation()}
            >
                {/* Header */}
                <div className="flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700">
                    <h2 className="text-xl font-semibold text-gray-900 dark:text-white">Knowledge ‚Äì View Detail</h2>
                    <button onClick={onClose} className="text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
                        <X className="w-6 h-6" />
                    </button>
                </div>

                {/* Content - Scrollable area */}
                <div className="flex-grow overflow-y-auto p-6 space-y-6">
                    
                    {/* Title & Time */}
                    <div className="space-y-1">
                        <h3 className="text-lg font-bold text-gray-900 dark:text-white">{knowledge.title}</h3>
                        <p className="text-xs text-gray-500 dark:text-gray-400 flex items-center">
                            <Calendar className="w-3 h-3 mr-1" />
                            {knowledge.publishedDate.split(' ')[1]} {knowledge.publishedDate.split(' ')[0]}
                        </p>
                    </div>

                    {/* N·ªôi dung b√†i vi·∫øt */}
                    <div className="space-y-2 pt-2">
                        <h4 className="font-semibold text-gray-700 dark:text-gray-200">N·ªôi dung b√†i vi·∫øt</h4>
                        <div className="p-3 bg-gray-50 dark:bg-gray-700 rounded-lg text-sm text-gray-800 dark:text-gray-200 space-y-2">
                            <p>Th√°ng 8 n√†y, cung S∆∞ T·ª≠ s·∫Ω c√≥ nhi·ªÅu thay ƒë·ªïi t√≠ch c·ª±c trong c√¥ng vi·ªác. Nh∆∞ng d·ª± √°n m·ªõi s·∫Ω mang l·∫°i c∆° h·ªôi ph√°t tri·ªÉn. H√£y n·∫Øm b·∫Øt v√† ƒë·ª´ng ng·∫°i th·ª≠ th√°ch b·∫£n th√¢n! üòÑ‚ú®</p>
                            <p className="text-gray-600 dark:text-gray-400 italic">C√°c cung kh√°c c≈©ng c√≥ th·ªÉ tham kh·∫£o l·ªãch t∆∞ v·∫•n c√° nh√¢n ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ chi ti·∫øt nh·∫•t.</p>
                        </div>
                    </div>

                    {/* Danh m·ª•c */}
                    <div className="space-y-2 pt-2">
                        <h4 className="font-semibold text-gray-700 dark:text-gray-200">Danh m·ª•c</h4>
                        <div className="flex flex-wrap items-center">
                            {knowledge.categories.map((cat, index) => (
                                <CategoryBadge key={index} value={cat} />
                            ))}
                            <button className="flex items-center text-blue-600 dark:text-blue-400 text-sm font-medium hover:opacity-80 transition">
                                <Plus className="w-4 h-4 mr-1" /> Th√™m danh m·ª•c
                            </button>
                        </div>
                    </div>

                    {/* Tr·∫°ng th√°i */}
                    <div className="space-y-2 pt-2">
                        <h4 className="font-semibold text-gray-700 dark:text-gray-200">Tr·∫°ng th√°i</h4>
                        <div className="inline-block relative">
                            <select 
                                defaultValue={knowledge.status}
                                className="appearance-none block w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 
                                            text-gray-900 dark:text-gray-200 py-2 pl-3 pr-8 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-sm"
                            >
                                <option value="ƒê√£ xu·∫•t b·∫£n">ƒê√£ xu·∫•t b·∫£n</option>
                                <option value="B·∫£n nh√°p">B·∫£n nh√°p</option>
                                <option value="ƒê√£ ·∫©n">ƒê√£ ·∫©n</option>
                                <option value="ƒê√£ l∆∞u tr·ªØ">ƒê√£ l∆∞u tr·ªØ</option>
                            </select>
                            <ChevronDown className="pointer-events-none absolute inset-y-0 right-0 w-5 h-5 my-auto mr-2 text-gray-400" />
                        </div>
                    </div>

                    {/* Media */}
                    <div className="space-y-2 pt-2">
                        <h4 className="font-semibold text-gray-700 dark:text-gray-200">Media</h4>
                        <div className="w-full h-40 bg-blue-50 dark:bg-blue-900/30 rounded-lg flex items-center justify-center border-2 border-dashed border-blue-200 dark:border-blue-700">
                            <ImageIcon className="w-10 h-10 text-blue-400 dark:text-blue-600" />
                        </div>
                    </div>
                    
                    {/* Views */}
                    <p className="text-sm text-gray-600 dark:text-gray-400 flex items-center pt-2">
                        <Eye className="w-4 h-4 mr-1" /> 
                        <span className='font-medium'>{knowledge.views.toLocaleString('vi-VN')}</span> l∆∞·ª£t xem
                    </p>

                </div>

                {/* Footer Buttons */}
                <div className="p-4 border-t border-gray-200 dark:border-gray-700 flex justify-between space-x-3">
                    <button
                        className="flex items-center justify-center flex-1 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors"
                    >
                        <Edit2 className="w-5 h-5 mr-2" /> L∆∞u thay ƒë·ªïi
                    </button>
                    <button
                        className="flex items-center justify-center flex-1 py-2 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition-colors"
                    >
                        <Trash2 className="w-5 h-5 mr-2" /> X√≥a
                    </button>
                </div>
            </div>
        </div>
    );
};